#!/usr/bin/env python3

import gym
import numpy as np
import rospy as rp
import tqdm
import sys


def main():
    env = gym.make("menge_gym:MengeGym-v0", scenario_xml="/home/julian/Desktop/test_data/test.xml")
    rp.sleep(20)
    num_iterations = 300
    action_sequence = 50 * [np.array([env.action_space.nvec[0] - 1, np.median(range(env.action_space.nvec[1]))],
                                     dtype=np.int32)] + [np.array([0, env.action_space.nvec[1] - 1])] \
                      + 50 * [np.array([env.action_space.nvec[0] - 1, np.median(range(env.action_space.nvec[1]))],
                                     dtype=np.int32)] + 3 * [np.array([0, 0])] \
                      + 50 * [np.array([env.action_space.nvec[0] - 1, np.median(range(env.action_space.nvec[1]))],
                                     dtype=np.int32)] + 2 * [np.array([0, 0])] \
                      + 94 * [np.array([np.median(range(env.action_space.nvec[0])), np.percentile(range(env.action_space.nvec[1]), 40)],
                                     dtype=np.int32)]
    try:
        with tqdm.trange(num_iterations) as t:
            for step in t:
                if step < 250:
                    action = action_sequence[step]
                else:
                    action = env.action_space.sample()
                ob, reward, done, info = env.step(action)
                if done:
                    rp.loginfo(info)
                    rp.loginfo('Finished cleanly')
                    env.reset()
                    rp.loginfo('Set up new env')
                else:
                    rp.loginfo('Reward: %f' % reward)
                env.render()
        rp.loginfo('Done with all iterations')
        env.close()
    except KeyboardInterrupt:
        env.close()
    except Exception as e:
        env.close()
        print('Exception in main script')
        raise e


if __name__ == "__main__":
    main()
